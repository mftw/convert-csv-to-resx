#!/usr/bin/env node
"use strict";

// const { generateFiles, makeCsvTemplateFile } = require("../index");
const { generateFiles, makeCsvTemplateFile } = require("../dist/index.js");
const fs = require("fs");

const [_, dir, ...args] = process.argv;
const cmdArgs = require("minimist")(args, { "--": true }, { boolean: true }, { string: true });

const shouldGenerateTemplate = cmdArgs["generate-template"];

const inputFileName =
    cmdArgs["input-file"] ||
    (typeof cmdArgs._[0] === "string" && cmdArgs._[0].toLowerCase().includes(".csv") && cmdArgs._[0]);

if (shouldGenerateTemplate) {
    const templateName =
        typeof shouldGenerateTemplate === "string" && shouldGenerateTemplate.length > 0
            ? `./${shouldGenerateTemplate}.csv`
            : "./CSVTemplateFile.csv";
    makeCsvTemplateFile(templateName).then(() => {
        console.log("[DONE] Written '" + templateName + "' with UTF-8-BOM encoding");
    });
} else {
    if (inputFileName && fs.existsSync(inputFileName)) {
        const projectName =
            cmdArgs["project-name"] || (typeof cmdArgs._[1] === "string" && cmdArgs._[1].length > 0)
                ? cmdArgs._[1]
                : inputFileName.slice(0, inputFileName.lastIndexOf("."));
        generateFiles(inputFileName, { projectName, silent: false });
    } else {
        if (!inputFileName || inputFileName === "false" || inputFileName === false) {
            console.log("[ERROR] Please provide a .csv file");
        } else {
            console.log("[ERROR] File: '" + inputFileName + "' not found");
        }
    }
}
